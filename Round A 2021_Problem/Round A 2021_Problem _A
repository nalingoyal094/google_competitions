#include "bits/stdc++.h"
using namespace std;
#define int               long long
#define pb                push_back
#define ppb               pop_back
#define pf                push_front
#define ppf               pop_front
#define all(x)            (x).begin(),(x).end()
#define uniq(v)           (v).erase(unique(all(v)),(v).end())
#define sz(x)             (int)((x).size())
#define fr                first
#define sc                second
#define pii               pair<int,int>
#define rep(i,a,b)        for(int i=a;i<b;i++)
#define mem1(a)           memset(a,-1,sizeof(a))
#define mem0(a)           memset(a,0,sizeof(a))
#define ppc               __builtin_popcount
#define ppcll             __builtin_popcountll

template<typename T1,typename T2>istream& operator>>(istream& in,pair<T1,T2> &a){in>>a.fr>>a.sc;return in;}
template<typename T1,typename T2>ostream& operator<<(ostream& out,pair<T1,T2> a){out<<a.fr<<" "<<a.sc;return out;}
template<typename T,typename T1>T amax(T &a,T1 b){if(b>a)a=b;return a;}
template<typename T,typename T1>T amin(T &a,T1 b){if(b<a)a=b;return a;}

const long long INF=1e18;
const int32_t M=1e9+7;
const int32_t MM=998244353;

const int N=1e5+5;

#define SIEVE
int primes[N];
vector<int> pr;
void sieve(){
	for(int i=2;i<N;i++){
		if(primes[i]==0){
			pr.pb(i);
			for(int j=i*i;j<N;j+=i){
				primes[j]=1;
			}
		}
		primes[i]^=1;
	}
}


int fact(int n) 
{ 
    if (n==1 || n==0)
    {
        return 1;
    }
    int res = 1; 
    for (int i = 2; i <= n; i++) 
        res = res * i; 
    return res; 
} 
int nCr(int n, int r) 
{ 
    if (n==0 || r>n)
    {
        return 0;
    }
    return fact(n) / (fact(r) * fact(n - r)); 
}

int nC2(int n) {
    if (n < 2)
        return 0;
    assert(n < 3.0e9);
    return n * (n - 1) / 2;
}

int  solve()
{
    
    int n,k;
    cin>>n>>k;
    string s;
    cin>>s;
    
    int good=0;
    
    for (int i=1;i<=s.size()/2;i++)
    {
        int in=i-1;
        if (s[in]!=s[s.size()-1-in])
          good++;
    }
    if (good==k)
    {
        return 0;
        
    }
    else
    {
       // cout<<good<<" "<<k<<endl;
        return abs(good-k);
    }
	
}
signed main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0);cout.tie(0);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	#ifdef SIEVE
		sieve();
	#endif
	#ifdef NCR
		init();
	#endif
	int t;
	cin>>t;
	 for (int t1=1;t1<=t;t1++) 
	{ 
	    cout<<"Case #"<<t1<<": "<<solve()<<endl;
	    
	}
	return 0;
}
